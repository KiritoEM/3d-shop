generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String
  config3D    Json     @default("{\"scale\": 2.4, \"position\": [0, 0, 0], \"rotation\": [0, 0, 0]}")
  price       Decimal
  modelPath   String
  groundColor String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  categoryId  Int
  cuid        String   @default(cuid()) @unique
  category    Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  customisationConfigs Json @default("{}")

  @@map("product")
}

model Category {
  id      Int       @id @default(autoincrement())
  name    String
  Product Product[]

  @@map("category")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  name String
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Transactions Transaction[]

  @@map("user")
}

model Transaction {
  id Int @id @default(autoincrement())
  createdAt   DateTime @default(now())
  stripePaymentIntentId String @unique
  stripeChargeId String @unique
  amount Int
  currency String @default("eur")
  status TransactionStatus
  updatedAt   DateTime @updatedAt
  customerEmail String
  customerName String
  userId Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("transation")
}

enum TransactionStatus {
  PENDING
  PROCESSING
  SUCCEEDED
  FAILED
  CANCELED
  REFUNDED
  PARTIALLY_REFUNDED
}
